{
  "name": "video-directory-backend",
  "version": "1.0.0",
  "description": "Production-ready video tutorial directory with AI automation",
  "license": "MIT",
  "type": "module",
  "scripts": {
    "build": "cross-env NODE_OPTIONS=--no-deprecation next build",
    "dev": "cross-env NODE_OPTIONS=--no-deprecation next dev -p 3001",
    "redis:start": "docker-compose -f docker-compose.redis.yml up -d --remove-orphans",
    "redis:stop": "docker-compose -f docker-compose.redis.yml down",
    "redis:logs": "docker logs video-directory-redis -f",
    "redis:clean": "docker-compose -f docker-compose.redis.yml down --remove-orphans && docker-compose -f docker-compose.redis.yml up -d",
    "dev:blazing": "cross-env NODE_OPTIONS='--no-deprecation --max-old-space-size=8192 --unhandled-rejections=warn' NODE_ENV=development TURBOPACK=1 next dev -p 3001 --turbo",
    "dev:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--no-deprecation next dev -p 3001",
    "devsafe": "rm -rf .next && cross-env NODE_OPTIONS=--no-deprecation next dev -p 3001",
    "generate:importmap": "cross-env NODE_OPTIONS=--no-deprecation payload generate:importmap",
    "generate:types": "cross-env NODE_OPTIONS=--no-deprecation payload generate:types",
    "lint": "cross-env NODE_OPTIONS=--no-deprecation next lint",
    "payload": "cross-env NODE_OPTIONS=--no-deprecation payload",
    "seed-categories": "curl -X POST http://localhost:3001/api/seed || echo 'Server not running. Please start with: npm run dev'",
    "start": "cross-env NODE_OPTIONS=--no-deprecation next start",
    "start:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--no-deprecation next start",
    "test": "playwright test",
    "test:ui": "playwright test --ui",
    "test:utils": "playwright test tests/youtube-utils.spec.ts tests/youtube-duration.spec.ts",
    "test:server": "WITH_SERVER=1 playwright test tests/youtube-api.spec.ts tests/youtube-fetching.spec.ts",
    "test:report": "playwright show-report",
    "test:agent": "node test-agent-system.js",
    "agent:test": "npm run test:agent",
    "agent:create-user": "payload run src/scripts/create-automation-user-local.js",
    "agent:instructions": "node get-api-key-instructions.js",
    "agent:setup": "npm run agent:create-user && echo 'ðŸš€ AI Agent Setup Complete!' && echo '========================' && echo 'âœ… Automation user created and configured' && echo 'âœ… API key generated and set in environment' && echo 'âœ… Ready to connect n8n!' && echo '' && echo 'ðŸ”§ Next steps:' && echo '1. Your n8n is already running on port 5678' && echo '2. Import workflow: n8n-workflows/main-video-agent.json' && echo '3. Test webhook: curl -X POST http://localhost:5678/webhook/video-agent' && echo '4. See AGENT_SETUP_GUIDE.md for full details'",
    "n8n:start": "docker run -p 5678:5678 --env-file n8n.env n8nio/n8n",
    "n8n:start-dev": "docker run -p 5678:5678 --env-file n8n.env -v $(pwd)/n8n-workflows:/home/node/.n8n n8nio/n8n",
    "docker:ai-stack": "docker-compose -f docker-compose.yml -f docker-compose.ai.yml up -d",
    "health:check": "curl -f http://localhost:3001/api/health || curl -f http://localhost:3001/health",
    "setup:full": "npm run agent:setup && echo '' && echo 'ðŸ“‹ Quick Start Commands:' && echo 'npm run dev          # Start Payload CMS' && echo 'npm run test:agent   # Test AI agent system' && echo 'npm run n8n:start    # Start n8n workflow engine'",
    "setup:production": "chmod +x install-production-deps.sh && ./install-production-deps.sh",
    "backup:create": "node src/scripts/backup/database-backup.mjs",
    "backup:stats": "node src/scripts/backup/database-backup.mjs --stats",
    "backup:schedule": "echo '0 2 * * * cd $(pwd) && npm run backup:create' | crontab -",
    "logs:view": "tail -f logs/combined-$(date +%Y-%m-%d).log",
    "logs:errors": "tail -f logs/error-$(date +%Y-%m-%d).log",
    "logs:performance": "tail -f logs/performance-$(date +%Y-%m-%d).log",
    "analytics:generate": "curl -s http://localhost:3001/api/analytics | jq .",
    "search:test": "curl -s 'http://localhost:3001/api/search/advanced?q=javascript&skillLevel=beginner' | jq .",
    "db:index": "node src/scripts/database/create-indexes.mjs",
    "security:audit": "npm audit && npm run lint",
    "performance:test": "echo 'Performance testing endpoints...' && time curl -s http://localhost:3001/api/videos?limit=50 > /dev/null",
    "deploy:check": "npm run build && npm run security:audit && npm run test && echo 'âœ… Ready for deployment'",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org $SENTRY_ORG --project $SENTRY_PROJECT .next && sentry-cli sourcemaps upload --org $SENTRY_ORG --project $SENTRY_PROJECT .next",
    "cache:warm": "node src/scripts/warm-cache.mjs",
    "cache:clear": "node -e \"require('./src/lib/redis.ts').redis.flush()\"",
    "analytics:dashboard": "curl -s http://localhost:3001/api/analytics/dashboard | jq ."
  },
  "dependencies": {
    "@cloudinary/react": "^1.14.3",
    "@cloudinary/url-gen": "^1.21.0",
    "@payloadcms/db-mongodb": "^3.39.1",
    "@payloadcms/email-nodemailer": "3.39.1",
    "@payloadcms/next": "^3.39.1",
    "@payloadcms/payload-cloud": "^3.39.1",
    "@payloadcms/plugin-seo": "^3.39.1",
    "@payloadcms/richtext-lexical": "^3.39.1",
    "@sentry/node": "^8.0.0",
    "cloudinary": "^2.6.1",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "date-fns": "^3.6.0",
    "dotenv": "^16.4.5",
    "express-rate-limit": "^7.1.5",
    "graphql": "^16.8.1",
    "helmet": "^7.1.0",
    "ioredis": "^5.3.2",
    "next": "15.3.0",
    "next-cloudinary": "^6.16.0",
    "node-cron": "^3.0.3",
    "payload": "^3.39.1",
    "react": "19.1.0",
    "react-dom": "19.1.0",
    "redis": "^4.6.10",
    "sharp": "^0.32.6",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@payloadcms/ui": "^3.39.1",
    "@playwright/test": "^1.52.0",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/node": "^22.5.4",
    "@types/react": "19.1.0",
    "@types/react-dom": "19.1.2",
    "eslint": "^9.16.0",
    "eslint-config-next": "15.3.0",
    "prettier": "^3.4.2",
    "tsx": "^4.19.2",
    "typescript": "5.7.3"
  },
  "engines": {
    "node": "^18.20.2 || >=20.9.0",
    "pnpm": "^9 || ^10"
  },
  "pnpm": {
    "onlyBuiltDependencies": [
      "sharp"
    ],
    "peerDependencyRules": {
      "allowedVersions": {
        "react": "19.1.0",
        "react-dom": "19.1.0"
      }
    },
    "overrides": {
      "date-fns": "^3.6.0"
    }
  },
  "packageManager": "pnpm@10.11.0+sha512.6540583f41cc5f628eb3d9773ecee802f4f9ef9923cc45b69890fb47991d4b092964694ec3a4f738a420c918a333062c8b925d312f42e4f0c263eb603551f977"
}
