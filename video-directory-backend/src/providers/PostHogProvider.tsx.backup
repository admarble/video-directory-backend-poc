'use client'
import posthog from 'posthog-js'
import { PostHogProvider } from 'posthog-js/react'
import { ReactNode } from 'react'

// Only initialize PostHog if we have a valid API key
if (typeof window !== 'undefined') {
  const posthogKey = process.env.NEXT_PUBLIC_POSTHOG_KEY
  const posthogHost = process.env.NEXT_PUBLIC_POSTHOG_HOST || 'https://app.posthog.com'

  console.log('üîç PostHog Debug Info:', {
    keyExists: !!posthogKey,
    keyLength: posthogKey?.length,
    keyPrefix: posthogKey?.substring(0, 4),
    host: posthogHost,
    environment: process.env.NODE_ENV,
  })

  // Check if we have a valid PostHog key (not placeholder or empty)
  if (
    posthogKey &&
    posthogKey !== 'your_posthog_project_key_here' &&
    posthogKey !== 'phc_YOUR_PROJECT_KEY_HERE' &&
    posthogKey !== 'personal_api_key' &&
    posthogKey !== 'disabled' &&
    !posthogKey.includes('YOUR_PROJECT_KEY') &&
    !posthogKey.includes('PLACEHOLDER') &&
    (posthogKey.startsWith('phc_') || posthogKey.startsWith('phx_')) &&
    posthogKey.length > 20 // Real PostHog keys are much longer than placeholders
  ) {
    try {
      posthog.init(posthogKey, {
        api_host: posthogHost,
        loaded: (posthog) => {
          if (process.env.NODE_ENV === 'development') {
            console.log('‚úÖ PostHog initialized successfully')
            posthog.debug()
          }
        },
        // Add error handling
        on_request_error: (failedRequest) => {
          console.warn('‚ö†Ô∏è PostHog Request Error:', failedRequest)
        },
        capture_pageview: false, // We'll manually control this
        disable_session_recording: process.env.NODE_ENV === 'development',
      })
    } catch (error) {
      console.error('‚ùå PostHog initialization failed:', error)
    }
  } else {
    console.log(
      'üîß PostHog not initialized: Please add a valid NEXT_PUBLIC_POSTHOG_KEY to .env.local',
      { currentKey: posthogKey },
    )
  }
}

export function CSPostHogProvider({ children }: { children: ReactNode }) {
  return <PostHogProvider client={posthog}>{children}</PostHogProvider>
}
